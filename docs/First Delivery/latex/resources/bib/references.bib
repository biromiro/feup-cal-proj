 
@book{tarjan, title={Tarjan's Strongly Connected Component (SCC) Algorithm (UPDATED) | Graph Theory}, url={https://www.youtube.com/watch?v=wUgWX0nc4NY&amp;t=55s}, journal={YouTube}, publisher={YouTube}, year={2020}, month={Apr}} 

@article{heuristics,
  author={P. E. {Hart} and N. J. {Nilsson} and B. {Raphael}},
  journal={IEEE Transactions on Systems Science and Cybernetics}, 
  title={A Formal Basis for the Heuristic Determination of Minimum Cost Paths}, 
  year={1968},
  volume={4},
  number={2},
  pages={100-107},
  doi={10.1109/TSSC.1968.300136}}

@book{adaixo, title={Influence Map-Based Pathfinding Algorithms inVideo Games}, author={Adaixo, Michaël Carlos Gonçalves}, url={https://ubibliorum.ubi.pt/bitstream/10400.6/5517/1/3443_6881.pdf}} UNIVERSIDADE DA BEIRA INTERIOR Influence Map-Based Pathfinding Algorithms in Video Games Michaël Carlos Gonçalves Adaixo Dissertação para obtenção do Grau de Mestre em Engenharia Informática (2º ciclo de estudos)

 @misc{distance, title={Fast geodesic approximations with Cheap Ruler}, url={https://blog.mapbox.com/fast-geodesic-approximations-with-cheap-ruler-106f229ad016}, journal={Medium}, publisher={Medium}, author={Agafonkin, Vladimir}, year={2017}, month={Aug}} 


@book{skienna1,
  abstract = {This expanded and updated second edition of a classic bestseller continues to take the mystery out of designing and analyzing algorithms and their efficacy and efficiency. Expanding on the highly successful formula of the first edition, the book now serves as the primary textbook of choice for any algorithm design course while maintaining its status as the premier practical reference guide to algorithms. NEW: (1) Incorporates twice the tutorial material and exercises. (2) Provides full online support for lecturers, and a completely updated and improved website component with lecture slides, audio and video. (3) Contains a highly unique catalog of the 75 most important algorithmic problems. (4) Includes new war stories and interview problems, relating experiences from real-world applications. Unique, handy reference package with a practical, hands-on appeal to a wide audience This classic bestseller has been expanded and updated with twice the original tutorial material and exercises Contains a highly unique catalog of the 75 most important algorithmic problems Additional useful information such as lecture slides and updates available via author's website.},
  added-at = {2015-05-11T09:08:43.000+0200},
  address = {London},
  author = {Skiena, Steven S.},
  biburl = {https://www.bibsonomy.org/bibtex/29b2f5050241fea63ff5f49cc29b5bebf/ytyoun},
  doi = {10.1007/978-1-84800-070-4},
  interhash = {1087fa2b9db733b071ece02fc207a88d},
  intrahash = {9b2f5050241fea63ff5f49cc29b5bebf},
  isbn = {9781848000704 1848000707 9781848000698 1848000693},
  keywords = {algorithm programming textbook},
  publisher = {Springer},
  refid = {370729337},
  timestamp = {2015-12-12T14:24:40.000+0100},
  title = {The Algorithm Design Manual},
  year = 2008
}


@inproceedings{acmtsp,
author = {Twohig, Susan N. and Aletan, Samuel O.},
title = {The Traveling-Salesman Problem (Abstract)},
year = {1990},
isbn = {0897913485},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/100348.100468},
doi = {10.1145/100348.100468},
abstract = {The traveling-salesman problem is one of the classical NP-Complete problems. No current algorithms are available which can solve these problems in polynomial time, that is, the number of steps grows as a polynomial according to the size of the input. The traveling-salesman problem involves a salesman who must make a tour of a number of cities using the shortest path available. For each number of cities n, the number of paths which must be explored is n!, causing this problem to grow exponentially rather than as a polynomial.Three separate algorithms are examined. These are an iterative algorithm, a recursive algorithm, and a branch and bound algorithm. The iterative algorithm generates tours as the permutations of the first n - 1 integers (where n is the number of cities). The recursive algorithm begins with a subtour consisting of the starting city and uses a recursive subroutine to build all tours. The branch and bound algorithm builds a tree which represents tours. Each node of the tree has an associated bound, and when the bound of a node becomes larger than the cost of the best tour found so far, that node is no longer eligible for exploration. This pruning process allows this algorithm to delay exponential growth longer than the other two algorithms do. Two algorithms which develop near optimal solutions are also examined.},
booktitle = {Proceedings of the 1990 ACM Annual Conference on Cooperation},
pages = {437},
location = {Washington, D.C., USA},
series = {CSC '90}
}

@article{heldmankarp,
author = {KIMURA, Kazuro and HIGA, Shinya and Okita, Masao and Ino, Fumihiko},
year = {2019},
month = {12},
pages = {2329-2340},
title = {Accelerating the Held-Karp Algorithm for the Symmetric Traveling Salesman Problem},
volume = {E102.D},
journal = {IEICE Transactions on Information and Systems},
doi = {10.1587/transinf.2019PAP0008}
}


